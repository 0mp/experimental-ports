#! /bin/sh -
#
# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2018 Mateusz Piotrowski <0mp@FreeBSD.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     1. Redistributions of source code must retain the above copyright notice,
#        this list of conditions and the following disclaimer.
#     2. Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in the
#        documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# PROVIDE: kbfsd
# REQUIRE: DAEMON LOGIN NETWORKING

. /etc/rc.subr

name='kbfsd'
rcvar="${name}_enable"

load_rc_config "${name}"

# Default settings.
: "${kbfsd_enable:=no}"
: "${kbfsd_username:?'kbfsd_username cannot be empty.'}"
: "${kbfsd_mountpoint:=/keybase}"

command="%%LOCALBASE%%/bin/kbfsfuse"
command_args="-log-to-file ${kbfsd_mountpoint}"

start_precmd='kbfsd_prestart'
start_cmd='kbfsd_start'
# stop_cmd is not needed since procname and pidfile are set.

# This location is used by many other Keybase-related PID files.
pidfile="/home/${kbfsd_username}/.config/keybase/kbfsd.${kbfsd_username}.pid"
# The process name is equal to "daemon" because kbfsfuse is started by
# daemon(8).
procname="daemon"

required_dirs="${kbfsd_mountpoint}"
required_files="/home/${kbfsd_username}/.config/keybase/kbfsd.sock /home/${kbfsd_username}/.config/keybase/keybased.sock"
required_modules='fuse'

kbfsd_prestart()
{
	local _m

	# Make sure that the username is valid.
	if ! id -u -- "${kbfsd_username}" > /dev/null 2>&1; then
		err 1 "kbfsd_username is set to '${kbfsd_username}' which is not a valid user."
	fi

	# Create the mountpoint for the filesystem.
	if ! mkdir -p -- "${kbfsd_mountpoint}"; then
		err 1 "Cannot create the '${kbfsd_mountpoint}' directory.'"
	fi
	if ! chown "${kbfsd_username}" "${kbfsd_mountpoint}"; then
		err 1 "Cannot set ${kbfsd_username} as the owner of ${kbfsd_mountpoint}."
	fi

	# Make it possible to mount filesystems as a normal user.
	if ! sysctl vfs.usermount=1 > /dev/null 2>&1; then
		err 1 "Cannot set vfs.usermount to 1."
	fi

	# Add the specified user account to the opearator group so that it
	# could use the /dev/fuse device.
	if ! pw groupmod operator -m "${kbfsd_username}"
	then
		err 1 "Cannot add ${kbfsd_username} to the operator group."
	fi

	# The Keybase client has to be initiated so that
	# "/home/${kbfsd_username}/.config/keybase/keybased.sock" is present.
	su "${kbfsd_username}" -c "keybase fs ls ${kbfsd_mountpoint} > /dev/null 2>&1"

	return 0
}

kbfsd_start()
{
	check_pidfile "${pidfile}" "${procname}"
	# It has to be done manually because the su(1) mechanism present
	# in rc.subr(8) uses the "-m" flag, which causes kbfsfuse to look
	# for files in root's directories instead of the directories of
	# ${kbfsd_username}.
	daemon -P "${pidfile}" su "${kbfsd_username}" -c "${command} ${command_args}"
}

run_rc_command "$1"

# vim: filetype=sh softtabstop=8 shiftwidth=8 tabstop=8 noexpandtab
